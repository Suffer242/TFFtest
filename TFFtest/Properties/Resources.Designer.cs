//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.0
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFFtest.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TFFtest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LoadPlugin(&quot;C:\programs\MeGUI\tools\dgindex\DGDecode.dll&quot;)
        ///DGDecode_mpeg2source(&quot;{0}&quot;, iPP=true)
        ///{1}
        ///LoadPlugin(&quot;C:\programs\MeGUI\tools\avisynth_plugin\ColorMatrix.dll&quot;)
        ///ColorMatrix(d2v=&quot;{0}&quot;,interlaced=true, dest=0).
        /// </summary>
        internal static string avs {
            get {
                return ResourceManager.GetString("avs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на function CheckTopFirst(clip v1){
        ///global top_hits=1
        ///global bot_hits=1
        ///global text = &quot;&quot;
        ///global text2 = &quot;&quot;
        ///v1 = assumeframebased(v1)
        ///global tff=assumetff(v1).separatefields().bob()
        ///global bff=assumebff(v1).separatefields().bob()
        ///istff = tff.subtitle(&quot;Is frame TFF: TRUE&quot;).frameevaluate(&quot;top_hits=top_hits+1.0&quot;)
        ///isnottff = tff.subtitle(&quot;Is frame TFF: FALSE&quot;).frameevaluate(&quot;bot_hits=bot_hits+1.0&quot;)
        ///outclip = conditionalfilter(tff,istff, isnottff, &quot;yDifferenceFromPrevious(tff)+ydifferenceToNext(tff)&quot;,&quot;&lt;&quot;,&quot; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string template {
            get {
                return ResourceManager.GetString("template", resourceCulture);
            }
        }
    }
}
